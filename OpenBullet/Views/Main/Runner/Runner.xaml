<Page x:Class="OpenBullet.Views.Main.Runner.Runner"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:conv="clr-namespace:OpenBullet.Converters"
      xmlns:runner="clr-namespace:RuriLib.Runner;assembly=RuriLib"
      xmlns:local="clr-namespace:OpenBullet.Views.Main.Runner"
      xmlns:myvms ="clr-namespace:OpenBullet.ViewModels"
      mc:Ignorable="d" 
      d:DesignHeight="550" d:DesignWidth="780"
      Title="Runner">
    <Page.Resources>
        <ContextMenu x:Key="ItemContextMenu">
            <MenuItem x:Name="copySelectedData" Header="Copy Selected Data" Click="copySelectedData_Click"/>
            <MenuItem x:Name="copySelectedProxy" Header="Copy Selected Proxy" Click="copySelectedProxy_Click"/>
            <MenuItem x:Name="copySelectedCapture" Header="Copy Selected Data with Capture" Click="copySelectedCapture_Click"/>
            <MenuItem x:Name="sendToDebugger" Header="Send To Debugger" Click="sendToDebugger_Click"/>
            <MenuItem x:Name="selectAll" Header="Select All" Click="selectAll_Click"/>
            <MenuItem x:Name="showHTML" Header="Show Last Response in Browser" Click="showHTML_Click"/>
            <MenuItem x:Name="showLog" Header="Show Full Log" Click="showLog_Click"/>
        </ContextMenu>
    </Page.Resources>

    <Grid>
        <Grid.Resources>
            <conv:EnumBooleanConverter x:Key="ComparisonConverter"/>
        </Grid.Resources>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="80" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- TOP GRID -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="300" />
            </Grid.ColumnDefinitions>

            <!-- Top Left Grid -->
            <Grid Grid.Column="0" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center">
                    <Label Content="Start:" />
                    <TextBox x:Name="labelStartingPoint" Text="{Binding StartingPoint}" IsEnabled="{Binding ControlsEnabled}" />
                </StackPanel>

                <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Margin" Value="0 0 -8 0" />
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundMain}" />
                        </Style>
                    </StackPanel.Resources>
                    <Label Content="Prog: " />
                    <Label Content="{Binding ProgressCount}" />
                    <Label Content=" / " />
                    <Label Content="{Binding WordlistSize}" />
                    <Label Content=" (" />
                    <Label Content="{Binding Progress}" />
                    <Label Content="%)" />
                </StackPanel>

                <Slider x:Name="startingPointSlider" IsEnabled="{Binding ControlsEnabled}" Grid.Column="1" Grid.Row="0" Margin="5" Value="{Binding StartingPoint}" VerticalAlignment="Center" Minimum="1" Maximum="{Binding WordlistSize}" />
                <ProgressBar Grid.Column="1" Grid.Row="1" Margin="5" Value="{Binding Progress, Mode=OneWay}" />

            </Grid>

            <!-- Top Right Grid -->
            <Grid Grid.Column="1" Grid.Row="0">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <DockPanel Grid.Column="0" Grid.Row="0">
                    <Label DockPanel.Dock="Left" VerticalAlignment="Center" Content="Bots:" />
                    <Label Width="35" DockPanel.Dock="Left" VerticalAlignment="Center" Content="{Binding BotsAmount}" />
                    <Slider x:Name="botsSlider" VerticalAlignment="Center" TickFrequency="20" TickPlacement="Both" Minimum="1" Maximum="200" Value="{Binding BotsAmount, Mode=TwoWay}" Margin="0 0 10 0" />
                </DockPanel>
                <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal">
                    <Label Content="Prox:" VerticalAlignment="Center" Margin="0 0 15 0"/>
                    <RadioButton x:Name="proxyDefRadio" IsEnabled="{Binding ControlsEnabled}" GroupName="proxyRadio" Content="DEF" VerticalAlignment="Center" Margin="0 0 5 0" IsChecked="{Binding Path=ProxyMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static runner:ProxyMode.Default}}" ToolTip="Use the default proxy settings for the loaded config" />
                    <RadioButton x:Name="proxyYesRadio" IsEnabled="{Binding ControlsEnabled}" GroupName="proxyRadio" Content="ON" VerticalAlignment="Center" Margin="0 0 5 0" IsChecked="{Binding Path=ProxyMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static runner:ProxyMode.On}}" ToolTip="Override the config default setting and force the use of proxies" />
                    <RadioButton x:Name="proxyNoRadio" IsEnabled="{Binding ControlsEnabled}" GroupName="proxyRadio" Content="OFF" VerticalAlignment="Center" Margin="0 0 5 0" IsChecked="{Binding Path=ProxyMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static runner:ProxyMode.Off}}" ToolTip="Override the config default setting and remove proxy requirements"/>
                </StackPanel>
                <Button x:Name="startButton" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Content="START" Click="startButton_Click" />
            </Grid>

        </Grid>
        
        <!-- OTHER GRID -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="300" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="5" />
                <RowDefinition Height="150" />
            </Grid.RowDefinitions>

            <!-- Splitter -->
            <GridSplitter ResizeDirection="Columns" ResizeBehavior="PreviousAndNext" Grid.Column="1" Grid.Row="0" Width="5" VerticalAlignment="Stretch" />

            <!-- Right Grid -->
            <Grid x:Name="rightGrid" Grid.Column="2" Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>

                <ListView x:Name="validListView" Grid.Row="0" Foreground="{DynamicResource ForegroundMain}" Background="Transparent" ItemsSource="{Binding Path=HitsList, Mode=OneWay}" SelectionMode="Extended" BorderThickness="1">
                    <!-- Align Headers to the Left -->
                    <ListView.Resources>
                        <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
                            <Setter Property="Width" Value="18" />
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                                            <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="0" />
                                        <GradientStop Color="White" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type GridViewColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                        <Grid>
                                            <Border BorderThickness="0,0,0,1" BorderBrush="Black" Background="Transparent">
                                                <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Left" />
                                            </Border>
                                            <Thumb x:Name="PART_HeaderGripper"
                                         HorizontalAlignment="Right"
                                         Margin="0,0,-9,0"
                                         Style="{StaticResource GridViewColumnHeaderGripper}" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundMain}" />
                            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Century Gothic" />
                            <Setter Property="FontSize" Value="14" />
                        </Style>
                        <Style TargetType="{x:Type ListViewItem}">
                            <EventSetter Event="MouseRightButtonDown" Handler="ListViewItem_MouseRightButtonDown" />
                            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        Padding="0"
                        SnapsToDevicePixels="true">
                                            <GridViewRowPresenter 
                        HorizontalAlignment="Left" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource BackgroundSecondary}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource BackgroundSecondary}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.Resources>

                    <!-- Show Headers by overriding the default style -->
                    <ListView.Style>
                        <Style TargetType="{x:Type ListView}" />
                    </ListView.Style>

                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Time" DisplayMemberBinding="{Binding Path=Time}" />
                            <GridViewColumn Header="Data" DisplayMemberBinding="{Binding Path=Data}" />
                            <GridViewColumn Header="Proxy" DisplayMemberBinding="{Binding Path=Proxy}" />
                            <GridViewColumn Header="Type" DisplayMemberBinding="{Binding Path=Type}"/>
                            <GridViewColumn Width="2000" Header="Capture" DisplayMemberBinding="{Binding Path=CapturedData}" />
                        </GridView>
                    </ListView.View>
                </ListView>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Orientation="Horizontal">
                        <Button Content="Hits" x:Name="hitsFilterButton" Click="hitsFilterButton_Click" />
                        <Button Content="Custom" x:Name="customFilterButton" Click="customFilterButton_Click"/>
                        <Button Content="ToCheck" x:Name="toCheckFilterButton" Click="toCheckFilterButton_Click" />
                    </StackPanel>

                    <StackPanel Grid.Row="0" Grid.Column="1" Margin="0 -4 0 0" Orientation="Horizontal" HorizontalAlignment="Left">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="Margin" Value="-2 0"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Foreground" Value="{DynamicResource ForegroundMain}"/>
                                <Setter Property="FontSize" Value="12"/>
                            </Style>
                        </StackPanel.Resources>

                        <Label x:Name="daysLabel" Content="{Binding TimerDays}" />
                        <Label Content="days" />
                        <Label x:Name="hoursLabel" Content="{Binding TimerHours}" />
                        <Label Content=":" />
                        <Label x:Name="minutesLabel" Content="{Binding TimerMinutes}" />
                        <Label Content=":" />
                        <Label x:Name="secondsLabel" Content="{Binding TimerSeconds}" />
                    </StackPanel>

                    <Label x:Name="timeLeft" Content="{Binding TimeLeft}" Grid.Row="1" Grid.Column="1" Margin="0 -5 0 0" HorizontalAlignment="Left"/>
                </Grid>
                
            </Grid>

            <!-- Bots List View -->
            <ListView x:Name="botsListView" Grid.Column="0" Grid.Row="0" Foreground="{DynamicResource ForegroundMain}" Background="Transparent" ItemsSource="{Binding Path=Bots}" SelectionMode="Extended" BorderThickness="1">
                <!-- Align Headers to the Left -->
                <ListView.Resources>
                    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
                        <Setter Property="Width" Value="18" />
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                                        <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0" />
                                    <GradientStop Color="White" Offset="1" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type GridViewColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                    <Grid>
                                        <Border BorderThickness="0,0,0,1" BorderBrush="Black" Background="Transparent">
                                            <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Left" />
                                        </Border>
                                        <Thumb x:Name="PART_HeaderGripper"
                                         HorizontalAlignment="Right"
                                         Margin="0,0,-9,0"
                                         Style="{StaticResource GridViewColumnHeaderGripper}" />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="Foreground" Value="{DynamicResource ForegroundMain}" />
                        <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Century Gothic" />
                        <Setter Property="FontSize" Value="14" />
                    </Style>

                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                                        <GridViewRowPresenter 
                        HorizontalAlignment="Left" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource BackgroundSecondary}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{DynamicResource BackgroundSecondary}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Resources>

                <!-- Show Headers by overriding the default style -->
                <ListView.Style>
                    <Style TargetType="{x:Type ListView}" />
                </ListView.Style>

                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="40" Header="Id" DisplayMemberBinding="{Binding Path=Id}" />
                        <GridViewColumn Width="200" Header="Data" DisplayMemberBinding="{Binding Path=Data}" />
                        <GridViewColumn Width="150" Header="Proxy" DisplayMemberBinding="{Binding Path=Proxy}" />
                        <GridViewColumn Width="1000" Header="Status" DisplayMemberBinding="{Binding Path=Status}" />
                    </GridView>
                </ListView.View>
            </ListView>

            <!-- Bot Log Textbox -->
            <Grid x:Name="bottomLeftGrid" Grid.Column="0" Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                    <Button x:Name="selectConfigButton" IsEnabled="{Binding ControlsEnabled}" Content="Select CFG" Click="selectConfigButton_Click"/>
                    <Label Content="{Binding ConfigName}"/>
                </StackPanel>
                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                    <Button x:Name="selectWordlistButton" IsEnabled="{Binding ControlsEnabled}" Content="Select List" Click="selectWordlistButton_Click" />
                    <Label Content="{Binding WordlistName}"/>
                </StackPanel>
                <RichTextBox x:Name="logBox" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" IsReadOnly="True" BorderThickness="0" Background="{DynamicResource BackgroundSecondary}" Padding="5" FontFamily="Consolas" VerticalScrollBarVisibility="Visible">
                    <RichTextBox.Resources>
                        <Style TargetType="{x:Type Paragraph}">
                            <Setter Property="Margin" Value="0"/>
                        </Style>
                    </RichTextBox.Resources>
                </RichTextBox>

                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Column="0" Grid.Row="1">
                    <Button HorizontalAlignment="Left" x:Name="showManagerButton" Click="showManagerButton_Click">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/Images/Icons/left.png" Width="20" />
                            <TextBlock VerticalAlignment="Center" Margin="5 0">Back</TextBlock>
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Grid>

            <!-- Splitter -->
            <GridSplitter ResizeDirection="Rows" ResizeBehavior="PreviousAndNext" Grid.Column="0" Grid.Row="1" Height="5" HorizontalAlignment="Stretch" />
            
            <!-- Stats Grid -->
            <Grid Grid.Column="2" Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Margin" Value="0 -6 0 0" />
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundMain}" />
                        </Style>
                    </StackPanel.Resources>
                    <Label Content="DATA" FontWeight="Bold" Margin="0"/>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Total:" />
                        <Label Content="{Binding TestedCount, Mode=OneWay}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Hits:" Foreground="{DynamicResource ForegroundGood}" />
                        <Label Content="{Binding HitCount, Mode=OneWay}" Foreground="{DynamicResource ForegroundGood}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Custom:" Foreground="{DynamicResource ForegroundCustom}" />
                        <Label Content="{Binding CustomCount, Mode=OneWay}" Foreground="{DynamicResource ForegroundCustom}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Bad:" Foreground="{DynamicResource ForegroundBad}" />
                        <Label Content="{Binding FailCount}" Foreground="{DynamicResource ForegroundBad}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Retries:" Foreground="{DynamicResource ForegroundRetry}"/>
                        <Label Content="{Binding RetryCount}" Foreground="{DynamicResource ForegroundRetry}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="To Check:" Foreground="{DynamicResource ForegroundToCheck}"/>
                        <Label Content="{Binding ToCheckCount, Mode=OneWay}" Foreground="{DynamicResource ForegroundToCheck}" />
                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Column="1">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundMain}" />
                            <Setter Property="Margin" Value="0 -6 0 0" />
                        </Style>
                    </StackPanel.Resources>
                    <Label Content="PROXIES" FontWeight="Bold" Margin="0"/>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Total:" />
                        <Label Content="{Binding TotalProxiesCount}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label Content="Alive:" />
                        <Label Content="{Binding AliveProxiesCount}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label Content="Banned:" />
                        <Label Content="{Binding BannedProxiesCount}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label Content="Bad:" />
                        <Label Content="{Binding BadProxiesCount}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label Content="CPM:" FontWeight="Bold" ToolTip="Checks per minute" />
                        <Label Content="{Binding CPM}" FontWeight="Bold" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label Content="Credit:" FontWeight="Bold" ToolTip="Remaining balance of your captcha solving service account" />
                        <Label Content="{Binding BalanceString}" FontWeight="Bold"/>
                    </StackPanel>
                </StackPanel>
            </Grid>

        </Grid>
    </Grid>
</Page>
